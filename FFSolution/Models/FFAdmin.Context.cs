//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FFSolution.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FFAdminDBEntities : DbContext
    {
        public FFAdminDBEntities()
            : base("name=FFAdminDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agent> Agent { get; set; }
        public virtual DbSet<Commodity> Commodity { get; set; }
        public virtual DbSet<Config> Config { get; set; }
        public virtual DbSet<Country> Country { get; set; }
        public virtual DbSet<Courier> Courier { get; set; }
        public virtual DbSet<Currency> Currency { get; set; }
        public virtual DbSet<Measurement> Measurement { get; set; }
        public virtual DbSet<Port> Port { get; set; }
        public virtual DbSet<SalesMan> SalesMan { get; set; }
        public virtual DbSet<ShippingMode> ShippingMode { get; set; }
        public virtual DbSet<ShippingTerm> ShippingTerm { get; set; }
        public virtual DbSet<ShippingType> ShippingType { get; set; }
        public virtual DbSet<Customer> Customer { get; set; }
        public virtual DbSet<FeesInDischargePortNet> FeesInDischargePortNet { get; set; }
        public virtual DbSet<FeesInDischargePortSelling> FeesInDischargePortSelling { get; set; }
        public virtual DbSet<FeesInOriginNet> FeesInOriginNet { get; set; }
        public virtual DbSet<FeesInOriginSelling> FeesInOriginSelling { get; set; }
        public virtual DbSet<TranDetail> TranDetail { get; set; }
        public virtual DbSet<TranTotals> TranTotals { get; set; }
        public virtual DbSet<TranProfit> TranProfit { get; set; }
        public virtual DbSet<TranStatus> TranStatus { get; set; }
        public virtual DbSet<TranContainer> TranContainer { get; set; }
        public virtual DbSet<TranCharges> TranCharges { get; set; }
        public virtual DbSet<Tran> Tran { get; set; }
    
        public virtual int Update_Totals_FeesInDischargePortNet(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Totals_FeesInDischargePortNet", tranIDParameter);
        }
    
        public virtual int Update_Totals_FeesInDischargePortSelling(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Totals_FeesInDischargePortSelling", tranIDParameter);
        }
    
        public virtual int Update_Totals_FeesInOriginNet(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Totals_FeesInOriginNet", tranIDParameter);
        }
    
        public virtual int Update_Totals_FeesInOriginSelling(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Totals_FeesInOriginSelling", tranIDParameter);
        }
    
        public virtual int Update_Totals_TranCharges(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Totals_TranCharges", tranIDParameter);
        }
    
        public virtual int Update_Totals_TranContainer(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Totals_TranContainer", tranIDParameter);
        }
    
        public virtual int DeleteZeroTotals(Nullable<int> tranID)
        {
            var tranIDParameter = tranID.HasValue ?
                new ObjectParameter("TranID", tranID) :
                new ObjectParameter("TranID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteZeroTotals", tranIDParameter);
        }
    }
}
